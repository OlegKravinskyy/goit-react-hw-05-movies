{"version":3,"file":"static/js/779.523ec207.chunk.js","mappings":"mTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAgB,mCAAG,6GAELF,EAAAA,EAAAA,IAAU,sBAAuB,CACtDG,OAAQ,CACNC,QAASH,KAJe,cAEtBI,EAFsB,yBAOrBA,EAASC,KAAKC,SAPO,yDASrB,MATqB,yDAAH,qDAahBC,EAAc,mCAAG,WAAMC,GAAN,gGAEHT,EAAAA,EAAAA,IAAA,gBAA2B,CAChDG,OAAQ,CACNC,QAASH,EACTS,MAAOD,KALe,cAEpBJ,EAFoB,yBAQnBA,EAASC,KAAKC,SARK,wFAAH,sDAYdI,EAAY,mCAAG,WAAMC,GAAN,gGAEDZ,EAAAA,EAAAA,IAAA,iBAAoBY,GAAM,CAC/CT,OAAQ,CACNC,QAASH,KAJW,cAElBI,EAFkB,yBAOjBA,EAASC,MAPQ,wFAAH,sDAWZO,EAAY,mCAAG,WAAMD,GAAN,gGAEDZ,EAAAA,EAAAA,IAAA,iBAAoBY,EAApB,YAAkC,CACvDT,OAAQ,CACNC,QAASH,KAJW,cAElBI,EAFkB,yBAOjBA,EAASC,KAAKQ,MAPG,wFAAH,sDAWZC,EAAe,mCAAG,WAAMH,GAAN,gGAEJZ,EAAAA,EAAAA,IAAA,iBAAoBY,EAApB,YAAkC,CACvDT,OAAQ,CACNC,QAASH,EACTe,SAAU,QACVC,KAAM,KANiB,cAErBZ,EAFqB,yBASpBA,EAASC,KAAKC,SATM,wFAAH,qD,yHCnDfW,E,OAAcC,GAAAA,GAAH,6C,SCgCxB,EA5BgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRV,EAAAA,EAAAA,IAAgBQ,GAASG,KAAKJ,EAC/B,GAAE,CAACC,IAEAF,GAAWA,EAAQM,OAAS,GAE5B,0BACE,SAACT,EAAD,UACGG,EAAQO,KAAI,SAAAC,GACX,OACE,2BACE,qCAAaA,EAAOC,WACpB,0BAAOD,EAAOE,YAFPF,EAAOjB,GAKnB,QAKA,+BAEV,C","sources":["components/Api/api.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'b3a08fdd3c8f2c01f2754fee7d5e3f69';\n\nexport const getTrandingMovie = async () => {\n  try {\n    const response = await axios.get('/trending/movie/day', {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    return null;\n  }\n};\n\nexport const getMovieByWord = async word => {\n  try {\n    const response = await axios.get(`/search/movie`, {\n      params: {\n        api_key: API_KEY,\n        query: word,\n      },\n    });\n    return response.data.results;\n  } catch {}\n};\n\nexport const getMovieById = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data;\n  } catch {}\n};\n\nexport const getMovieCast = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.cast;\n  } catch {}\n};\n\nexport const getMovieReviews = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}/reviews`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        page: 1,\n      },\n    });\n    return response.data.results;\n  } catch {}\n};\n","import styled from 'styled-components';\nexport const ReviewsList = styled.ul`\n  list-style: none;\n`;\n","import { getMovieReviews } from 'components/Api/api';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ReviewsList } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieReviews(movieId).then(setReviews);\n  }, [movieId]);\n\n  if (reviews && reviews.length > 0) {\n    return (\n      <div>\n        <ReviewsList>\n          {reviews.map(review => {\n            return (\n              <li key={review.id}>\n                <h3>Author: {review.author}</h3>\n                <span>{review.content}</span>\n              </li>\n            );\n          })}\n        </ReviewsList>\n      </div>\n    );\n  } else {\n    return \"This movie don't have reviews\";\n  }\n};\n\nexport default Reviews;\n"],"names":["axios","API_KEY","getTrandingMovie","params","api_key","response","data","results","getMovieByWord","word","query","getMovieById","id","getMovieCast","cast","getMovieReviews","language","page","ReviewsList","styled","useState","reviews","setReviews","movieId","useParams","useEffect","then","length","map","review","author","content"],"sourceRoot":""}